{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ameer Khan\\\\Documents\\\\Node-apps\\\\Node-chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar connectionOptions = {\n  \"force new connection\": true,\n  \"reconnectionAttempts\": \"Infinity\",\n  \"timeout\": 10000,\n  \"transports\": [\"websocket\"]\n};\nthis.socket = io.connect('http://localhost:5000', connectionOptions);\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"d0IL40A6in8C0M9kpYxzMuyI8u0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Ameer Khan/Documents/Node-apps/Node-chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","connectionOptions","socket","connect","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,iBAAiB,GAAI;AACrB,0BAAyB,IADJ;AAErB,0BAAwB,UAFH;AAGrB,aAAY,KAHS;AAIrB,gBAAe,CAAC,WAAD;AAJM,CAAzB;AAOA,KAAKC,MAAL,GAAcF,EAAE,CAACG,OAAH,CAAW,uBAAX,EAAmCF,iBAAnC,CAAd;AAEA,IAAIC,MAAJ;;AAEA,MAAME,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,QAAQ,GAAG,gBAAjB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACQ,MAAAA,IAAD;AAAQE,MAAAA;AAAR,QAAgBT,WAAW,CAACY,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAAtB;AAEAV,IAAAA,MAAM,GAAGF,EAAE,CAACU,QAAD,CAAX;AAEAH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAPQ,EAON,CAACE,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAPM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAjBD;;GAAMR,I;;KAAAA,I;AAmBN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nvar connectionOptions =  {\r\n    \"force new connection\" : true,\r\n    \"reconnectionAttempts\": \"Infinity\", \r\n    \"timeout\" : 10000,                  \r\n    \"transports\" : [\"websocket\"]\r\n};\r\n\r\nthis.socket = io.connect('http://localhost:5000',connectionOptions);\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location}) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const ENDPOINT = 'localhost:5000'\r\n\r\n    useEffect(() => {\r\n        const {name , room} = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n    }, [ENDPOINT, location.search]);\r\n    return (\r\n        <h1>Chat</h1>\r\n\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}