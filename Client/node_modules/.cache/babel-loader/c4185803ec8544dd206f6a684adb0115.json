{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ameer Khan\\\\Documents\\\\Node-apps\\\\Node-chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar connectionOptions = {\n  \"force new connection\": true,\n  \"reconnectionAttempts\": \"Infinity\",\n  \"timeout\": 10000,\n  \"transports\": [\"websocket\"]\n};\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT, connectionOptions);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"M7DGl/NqV6luCY8IpJPKHYFo+ZU=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Ameer Khan/Documents/Node-apps/Node-chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","connectionOptions","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,IAAIC,iBAAiB,GAAI;AACrB,0BAAyB,IADJ;AAErB,0BAAwB,UAFH;AAGrB,aAAY,KAHS;AAIrB,gBAAe,CAAC,WAAD;AAJM,CAAzB;AAOA,IAAIC,MAAJ;;AAIA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiB,QAAQ,GAAG,gBAAjB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAACQ,MAAAA,IAAD;AAAQE,MAAAA;AAAR,QAAgBT,WAAW,CAACgB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAtB;AAEAb,IAAAA,MAAM,GAAGH,EAAE,CAACc,QAAD,EAAUZ,iBAAV,CAAX;AAEAK,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqC,MAAM,CAE1C,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAJD;AAKH,GAjBQ,EAiBN,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAjBM,CAAT;AAoBAlB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAY;AAC7BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMA,QAAMQ,WAAW,GAAIC,KAAD,IAAU;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGZ,OAAH,EAAY;AACRP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACJ,GAND;;AAQAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA3DD;;GAAMJ,I;;KAAAA,I;AA6DN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar'\r\n\r\nvar connectionOptions =  {\r\n    \"force new connection\" : true,\r\n    \"reconnectionAttempts\": \"Infinity\", \r\n    \"timeout\" : 10000,                  \r\n    \"transports\" : [\"websocket\"]\r\n};\r\n\r\nlet socket;\r\n\r\n\r\n\r\nconst Chat = ({ location}) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = 'localhost:5000'\r\n\r\n    useEffect(() => {\r\n        const {name , room} = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT,connectionOptions);\r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room } , () => {\r\n            \r\n        });\r\n\r\n        return () => {\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n        }\r\n    }, [ENDPOINT, location.search]);\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) =>{\r\n            setMessages([...messages, message]);\r\n        })\r\n    }, [messages]);\r\n\r\n    const sendMessage = (event) =>{\r\n        event.preventDefault();\r\n\r\n        if(message) {\r\n            socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    }\r\n\r\n    console.log(message, messages);\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div class=\"container\">\r\n                <InfoBar room={room} />\r\n                {/* <div>\r\n                <input \r\n                value={message} \r\n                onChange={(event) => setMessage(event.target.value)}\r\n                onKeyPress={event=> event.key === 'Enter' ? sendMessage(event): null}\r\n                />\r\n            </div> */}\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}